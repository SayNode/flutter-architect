String content() {
  return "import 'package:get/get.dart'; \nimport 'package:shared_preferences/shared_preferences.dart'; \n \nclass StorageService extends GetxService { \n  late SharedPreferences _prefs; \n \n  init() async { \n    _prefs = await SharedPreferences.getInstance(); \n  } \n \n  Future<void> setString(String key, String value) async { \n    await _prefs.setString(key, value); \n  } \n \n  Future<void> setBool(String key, bool value) async { \n    await _prefs.setBool(key, value); \n  } \n \n  Future<void> setInt(String key, int value) async { \n    await _prefs.setInt(key, value); \n  } \n \n  Future<void> setDouble(String key, double value) async { \n    await _prefs.setDouble(key, value); \n  } \n \n  Future<void> setStringList(String key, List<String> value) async { \n    await _prefs.setStringList(key, value); \n  } \n \n  String? getString(String key) { \n    return _prefs.getString(key); \n  } \n \n  bool? getBool(String key) { \n    return _prefs.getBool(key); \n  } \n \n  int? getInt(String key) { \n    return _prefs.getInt(key); \n  } \n \n  double? getDouble(String key) { \n    return _prefs.getDouble(key); \n  } \n \n  List<String>? getStringList(String key) { \n    return _prefs.getStringList(key); \n  } \n \n  Future<void> remove(String key) async { \n    await _prefs.remove(key); \n  } \n \n  Future<void> clear() async { \n    await _prefs.clear(); \n  } \n \n  bool containsKey(String key) { \n    return _prefs.containsKey(key); \n  } \n \n  Set<String> getKeys() { \n    return _prefs.getKeys(); \n  } \n \n  Future<void> reload() async { \n    await _prefs.reload(); \n  } \n} \n";
}
